// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Linq;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace UseTVF
{
    public class CustomerReport
    {
        public int Id { get; set; }
        public string NAME { get; set; }
    }

    public partial class MyDBContext : DbContext
    {
        public MyDBContext()
        {
        }

        public virtual DbSet<CustomerReport> Customers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=MyEFC_DB2;Integrated Security=True");
                optionsBuilder.LogTo(Console.WriteLine, Microsoft.Extensions.Logging.LogLevel.Information);
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CustomerReport>().HasNoKey();
            modelBuilder.HasDbFunction(() => GetCustomerByName(default));
            OnModelCreatingPartial(modelBuilder);
        }

        public IQueryable<CustomerReport> GetCustomerByName(string name)
            => FromExpression(() => GetCustomerByName(name));

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}